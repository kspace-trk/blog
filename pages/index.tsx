import fs from 'fs'
import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useEffect } from 'react'
import styles from '../styles/Home.module.css'
import { remark } from 'remark';
import html from 'remark-html';
import matter from "gray-matter";

type Hoge = {
  fileNames: string[],
  articles: {
    title: string,
    content: string
  }[]
}

export const getStaticProps = () => {
  const fileNames = fs.readdirSync('./public/articles');
  const articles: string[] = []
  fileNames.forEach(async (elem) => {
    const article = fs.readFileSync('./public/articles/' + elem)
    const matterResult: any = matter(article);
    // Use remark to convert markdown into HTML string
    const processedContent = await remark()
    .use(html)
    .process(matterResult.content);
    const contentHtml = processedContent.toString();
    const hoge: any = {
      title: matterResult.content,
      content: contentHtml
    }
    articles.push(hoge)
  })
  return  {
    props: {
      fileNames,
      articles
    }
  }
}

const Home: NextPage<Hoge> = ({ fileNames, articles }) => {
  useEffect(() => {
    console.log(articles)
  }, [])
  console.log(articles)
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1>ブログだお</h1>
        <div>
          {articles.map((elem, index) => {
            return (
              <div dangerouslySetInnerHTML={{ __html: elem.content }} key={index} />
            )
          })}
      </div>
      </main>
    </div>
  )
}

export default Home
